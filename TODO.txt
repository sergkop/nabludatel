Immediate:
    * Forms to sign up as an observer
    * Configure postgres
    * redirects from old pages
    * use django static files for compression

--------------------------------------------

    * install python-gd to allow image uploads
    * Починить tinymce в zinnia
    * Use 'python manage.py dumpdata/loaddata' and put db file in repository (README)
    * Set proper response tags for caching e.g. last modified
    * sitemap.xml/robots.txt
    * PageSpeed optimization
    * удлинить поле поиска
    * Dropdown menus for some main menu items
    * Перенести последние блог посты
    * add captcha
    * посылать email когда пользователь регистрируется

Right after launch (after moving to proper domain already):
    * Install yandex метрика
    * Configure google custom search (add to README)
    * Configure logging
    * debug=False

Server:
    * Make backups/portability of db data to another server
    * How to prevent DOS attacks?
    * Perform load testing. Use memcached and django-debug-toolbar to find bottlenecks

Post features:
    * Видео на главной странице (?)
    * Add odnoklassniki by monkeypatching django-loginza
    * Голосования (http://vkontakte.ru/developers.php?oid=-1&p=Poll)
    * rss feeds
    * Группировка выдачи блога по категориям (?)
    * What if user logged in with one social network account and then tries to do it with another?
    * система аутентификации и страница пользователя, можно ли совмещать разные типы логина?
      как насчет пароля для юзеров пришедших через loginza?
    * favicon
    * Tests
    * Ability to generate a static version of the site (in case of DDOS)
    * Captcha on registration form (?)
    * удобный способ совместить логин форму с регистрационной (найти)
    * integrate loginza and solve main issues
    * send emails with confirmation url
    * Change password form
    * recover old users accounts (зачем?)
    * setup loginza widget ID and API signature (after publishing)
